; Spacer game test
; Code adapted from the 6502asm page (http://www.6502asm.com/)

	.def background_color 0x0b
	.def ship_color 0x05

	.org 0x0600

reset:
	jsr init

loop:
	jsr drawShip
	jsr drawMap
	jsr genMap
	jsr readKeys
	jmp loop

drawShip:
	lda 0x60
	asl a
	tay
	lda ypos, y
	sta 0x00
	iny
	lda ypos, y
	sta 0x01
	ldy #42
	lda [0x00], y
	cmp #0
	beq noCrash
	cmp #ship_color
	bne crashed
noCrash:
	lda #ship_color
	sta [0x00], y
	lda 0x60
	cmp 0x61
	beq ret
	lda 0x61
	asl a
	tay
	lda ypos, y
	sta 0x00
	iny
	lda ypos, y
	sta 0x01
	lda #0
	ldy #42
	sta [0x00], y
	lda 0x60
	sta 0x61
ret:
	rts

crashed:
	lda 0xfe
	sta [0x00], y
	jmp crashed
readKeys:
	lda 0xff
	cmp #119
	bne notUp
	dec 0x60
	rts

notUp:
	cmp #115
	bne noMove
	inc 0x60
noMove:
	rts

init:
	ldx #0
drawLogo:
	lda bottomLogo, x
	sta 0x0500, x
	inx
	cpx #0
	bne drawLogo
	lda #10
	sta 0x60
	sta 0x61
	ldx #0
	lda #background_color
c:
	sta 0x0200, x
	sta 0x0400, x
	dex
	cpx #0
	bne c
	lda #16
	sta 0x80
	ldx #15
set:
	sta 0x81, x
	dex
	bpl set
	rts

drawMap:
	lda #0
	sta 0x78
	lda #32
	sta 0x79
	lda #192
	sta 0x7a
	lda #224
	sta 0x7b
	ldx #15
drawLoop:
	lda 0x81, x
	sta 0x82, x
	tay
	lda ypos, y
	sta 0x00
	iny
	lda ypos, y
	sta 0x01
	lda #background_color
	ldy 0x78
	sta [0x00], y
	iny
	sta [0x00], y
	ldy 0x7b
	sta [0x00], y
	iny
	sta [0x00], y
	ldy 0x79
	lda #0
	sta [0x00], y
	iny
	sta [0x00], y
	ldy 0x7a
	sta [0x00], y
	iny
	sta [0x00], y
	inc 0x78
	inc 0x79
	inc 0x7a
	inc 0x7b
	inc 0x78
	inc 0x79
	inc 0x7a
	inc 0x7b
	dex
	bpl drawLoop
	rts

genMap:
	lda 0x80
	cmp 0x81
	beq done
	lda 0x80
	clc
	sbc 0x81
	bpl plus
	bmi minus

done:
	lda 0xfe
	and #0x0f
	asl a
	sta 0x80
	rts

minus:
	dec 0x81
	dec 0x81
	rts

plus:
	inc 0x81
	inc 0x81
	rts

ypos:
	.db 0x00, 0x02, 0x20, 0x02, 0x40, 0x02, 0x60, 0x02
	.db 0x80, 0x02, 0xa0, 0x02, 0xc0, 0x02, 0xe0, 0x02
	.db 0x00, 0x03, 0x20, 0x03, 0x40, 0x03, 0x60, 0x03
	.db 0x80, 0x03, 0xa0, 0x03, 0xc0, 0x03, 0xe0, 0x03
	.db 0x00, 0x04, 0x20, 0x04, 0x40, 0x04, 0x60, 0x04
	.db 0x80, 0x04, 0xa0, 0x04, 0xc0, 0x04, 0xe0, 0x04
	.db 0x00, 0x05, 0x20, 0x05, 0x40, 0x05, 0x60, 0x05
	.db 0x80, 0x05, 0xa0, 0x05, 0xc0, 0x05, 0xe0, 0x05

bottomLogo:
	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x06, 0x01, 0x01, 0x01, 0x00
	.db 0x00, 0x06, 0x01, 0x01, 0x06, 0x00, 0x00, 0x01, 0x01, 0x01, 0x06, 0x00, 0x01, 0x01
	.db 0x01, 0x00, 0x01, 0x01, 0x01, 0x06, 0x00, 0x00, 0x06, 0x01, 0x06, 0x00, 0x06, 0x00
	.db 0x01, 0x00, 0x06, 0x01, 0x06, 0x01, 0x06, 0x00, 0x01, 0x00, 0x01, 0x00, 0x06, 0x00
	.db 0x06, 0x01, 0x06, 0x00, 0x06, 0x00, 0x01, 0x00, 0x06, 0x01, 0x06, 0x00, 0x00, 0x06
	.db 0x01, 0x01, 0x06, 0x06, 0x01, 0x01, 0x01, 0x00, 0x06, 0x01, 0x00, 0x00, 0x01, 0x00
	.db 0x01, 0x06, 0x00, 0x06, 0x06, 0x01, 0x01, 0x01, 0x00, 0x06, 0x01, 0x00, 0x06, 0x01
	.db 0x00, 0x06, 0x06, 0x06, 0x06, 0x06, 0x01, 0x06, 0x01, 0x01, 0x06, 0x06, 0x06, 0x01
	.db 0x01, 0x01, 0x01, 0x06, 0x01, 0x06, 0x06, 0x06, 0x06, 0x01, 0x06, 0x06, 0x06, 0x06
	.db 0x01, 0x01, 0x01, 0x06, 0x06, 0x06, 0x06, 0x01, 0x01, 0x01, 0x01, 0x0e, 0x01, 0x01
	.db 0x0e, 0x06, 0x06, 0x01, 0x01, 0x06, 0x01, 0x06, 0x01, 0x01, 0x01, 0x01, 0x0e, 0x01
	.db 0x01, 0x01, 0x01, 0x06, 0x01, 0x01, 0x06, 0x01, 0x06, 0x06, 0x06, 0x01, 0x01, 0x01
	.db 0x06, 0x0e, 0x01, 0x01, 0x06, 0x0e, 0x06, 0x01, 0x01, 0x0e, 0x01, 0x0e, 0x06, 0x01
	.db 0x01, 0x01, 0x06, 0x0e, 0x01, 0x01, 0x01, 0x0e, 0x01, 0x01, 0x06, 0x01, 0x06, 0x0e
	.db 0x0e, 0x0e, 0x06, 0x0e, 0x0e, 0x06, 0x0e, 0x0e, 0x06, 0x0e, 0x0e, 0x06, 0x0e, 0x0e
	.db 0x06, 0x0e, 0x0e, 0x06, 0x0e, 0x0e, 0x06, 0x0e, 0x0e, 0x06, 0x0e, 0x0e, 0x06, 0x0e
	.db 0x0e, 0x06, 0x0e, 0x0e

	.org 0xfffa

	.dw 0000
	.dw reset
	.dw 0000
